generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  imageUrl     String?
  status       UserStatus    @default(PENDING)
  messages     Message[]
  rooms        UserRoom[]
  confirmCodes ConfirmCode[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("users")
}

model ConfirmCode {
  id        Int               @id @default(autoincrement())
  code      String
  userId    Int
  status    ConfirmCodeStatus @default(PENDING)
  user      User              @relation(fields: [userId], references: [id])
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  @@map("confirm_code")
}

model UserRoom {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  roomId    Int
  room      Room     @relation(fields: [roomId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users_rooms")
}

model Room {
  id        Int        @id @default(autoincrement())
  name      String
  code      String     @unique
  users     UserRoom[]
  messages  Message[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("rooms")
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  roomId    Int
  room      Room     @relation(fields: [roomId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("messages")
}

enum ConfirmCodeStatus {
  PENDING
  USED
  EXPIRED

  @@map("confirm_code_status")
}

enum UserStatus {
  PENDING
  ACTIVE

  @@map("user_status")
}
